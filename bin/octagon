#!/usr/bin/env ruby

require 'octagon'

# setup proxy
RestClient.proxy = ENV['http_proxy'] if ENV['http_proxy']

# has a command been specified
if ARGV.size >= 1
    case ARGV[0]
    when 'configure'
        if ARGV.size == 2
            k = ARGV[1]
            begin
                test = OctagonDownloader.new(k)
                puts "Configuring OctagonSave with new api key #{k}"
                target = File.join(Dir.home, '.octagon', 'config.yml')
                config = {'api_key' => k}
                FileUtils.mkdir_p File.dirname target
                File.open(target, 'w') {|f| f.write config.to_yaml}
            rescue Exception => e
                puts "An error occured while testing the new key: #{e.message}"
            end
        else
            puts "usage: octagon configure <8tracks api key>"
        end
    when 'get'
        if ARGV.size >= 3
            url = ARGV[1]
            output_dir = ARGV[2]
            api_key = nil
            begin
                target = File.join(Dir.home, '.octagon', 'config.yml')
                config = YAML::load_file(target)
                api_key = config['api_key']
            rescue Exception => e
                puts "An error occured while loading configuration: #{e.message}"
            end

            od = OctagonDownloader.new(api_key)
            od.debug_mode() if ARGV.include? '--debug'
            od.save_all(url, output_dir)

        else
            puts "usage: octagon get <8tracks mix url> <output directory> [--debug]"
        end
    else
        puts "command #{ARGV[0].inspect} is unknown"
        puts "usage: octagon <configure|get>"
    end
else
    puts "usage: octagon <configure|get>"
end